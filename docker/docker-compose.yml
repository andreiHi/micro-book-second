version: '2.1'

services:

  database:
    image: postgres:12.2
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ostock_dev
    ports:
      - '5432:5432'
    networks:
      backend:
        aliases:
          - 'database'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  configserver:
    image: ostock/configserver:0.0.1-SNAPSHOT
    ports:
      - '8071:8071'
    networks:
      backend:
        aliases:
          - 'configserver'
  eurekaserver:
    image: ostock/eurekaserver:0.0.1-SNAPSHOT
    ports:
      - "8070:8070"
    environment:
      SPRING_CLOUD_CONFIG_URI: http://configserver:8071
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    networks:
      backend:
        aliases:
          - "eurekaserver"
  licensingservice:
    image: ostock/licensing-service:0.0.1-SNAPSHOT
    ports:
      - '8080:8080'
    environment:
      SPRING_PROFILES_ACTIVE: "dev"
      SPRING_CLOUD_CONFIG_URI: http://configserver:8071
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    networks:
      - backend
  organizationservice:
    image: ostock/organization-service:0.0.1-SNAPSHOT
    ports:
      - '8081:8081'
    environment:
      SPRING_PROFILES_ACTIVE: "dev"
      SPRING_CLOUD_CONFIG_URI: http://configserver:8071
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    networks:
      - backend
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - '2181:2181'
    networks:
      backend:
        aliases:
          - "zookeeper"
  kafkaserver:
    image: wurstmeister/kafka:latest
    ports:
      - '9092:9092'
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=dresses:1:1,ratings:1:1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - zookeeper
    networks:
      backend:
        aliases:
          - "kafka"
  kafkalocal:
    image: wurstmeister/kafka:latest
    ports:
      - '9092:9092'
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=localhost
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=dresses:1:1,ratings:1:1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - zookeeper
    networks:
      backend:
        aliases:
          - "kafka"
  redisserver:
    image: redis:alpine
    ports:
      - '6379:6379'
    networks:
      backend:
        aliases:
          - "redis"
networks:
  backend:
    driver: bridge
